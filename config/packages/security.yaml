security:
    enable_authenticator_manager: true

    access_denied_url: /fixer/login
    role_hierarchy:
        ROLE_FIXER:      ROLE_USER
        ROLE_CHEF:       ROLE_FIXER

    encoders:
         App\Entity\User:
             algorithm: bcrypt



    providers:
        our_db_provider:
            entity:
                class: App\Entity\User
                property: email
                # if you're using multiple entity managers
                # manager_name: customer

        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)



    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js|images|common)/
            security: false
        main:
             pattern:    ^/
             lazy: true
             # http_basic: ~
             provider: our_db_provider
             ##access_denied_handler: AppBundle\Security\AccessDeniedHandler
             ##logout_on_user_change: true
               ##form_xxlogin:
              ## login_path: login
            ##   check_path: login_check
              ## default_target_path: /
             login_link:
                check_route: login_check
                signature_properties: ['id']
             logout:
                path:   /logout
                target: /

             custom_authenticator:
                 - App\Security\UserAuthenticator
                 - App\Security\User2Authenticator
             entry_point: App\Security\UserAuthenticator


    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/public/images, roles:  IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/logout, roles:  IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/remotechangepassword, roles:  IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/register, roles:  IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/fixer/new, roles:  IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/fixer/login, roles:  IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/fixer/overview, roles:  IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/fixer/, roles: IS_AUTHENTICATED_ANONYMOUSLY  }
         - { path: ^/admin/, roles: ROLE_ADMIN  }
         - { path: ^/login, roles:  IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/, roles:  IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/, roles: ROLE_ADMIN  }


