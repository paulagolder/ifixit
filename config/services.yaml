# This file is the entry point to configure your own services.

parameters:

  recaptcha_key: '%env(resolve:RECAPTCHA_KEY)%'
  recaptcha_secret: '%env(resolve:RECAPTCHA_SECRET)%'

  version-name: "IFIXIT"
  admin-name: '%env(resolve:ADMIN_NAME)%'
  admin-email: '%env(resolve:ADMIN_EMAIL)%'
  testemail: '%env(resolve:TESTEMAIL)%'
  administratorsemails: '%env(resolve:ADMINISTRATORSEMAILS)%'

  base-url: '%env(resolve:BASE_URL)%'

  repair-images-folder: '%kernel.project_dir%/public/repair/images/'
  upload_dir: '../var/uploads'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $repairimagesfolder: '%repair-images-folder%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones


      #app.mylibrary:
    #    class:
    App\Service\MyLibrary:
        arguments:





    App\Service\message_service:
        class: App\Controller\MessageController
        calls:
            - [setContainer, ["@service_container"]]


    App\Service\FileUploader:
        arguments:
            $targetDirectory: '%repair-images-folder%'



